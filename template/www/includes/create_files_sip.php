<?php
// sip_OpenPBX.conf

include_once('/apps/OpenPBX/www/includes/variables.php');

function _create_sip_OpenPBX_codecs ($ba, $trunkid) {

	$query = $ba->query(
		'SELECT ' .
			'c.name AS name ' .
		'FROM ' .
			'sip_codecs AS c,' .
			'sip_rel_trunk_codec AS r ' .
		'WHERE ' .
			'r.trunkid = "'. $trunkid .'" ' .
		'AND ' .
			'c.id = r.codecid ' .
		'ORDER BY ' .
			'priority ' .
		'ASC'
	);
	while ($entry = $ba->fetch_array($query)) {
		$ret .= $entry['name'] . ',';
	}

	return substr_replace($ret, '', -1);
}

// create file sip_OpenPBX.conf
function create_sip_OpenPBX ($ba) {

	$fn = BAF_APP_AST_CFG . '/sip_OpenPBX.conf';

	$cont  = '; Generated by OpenPBX \'create_files_sip.php\'' ."\n\n";
	$cont .= '[general](+)' ."\n";

	$query = $ba->query(
		'SELECT ' .
			's.id AS id, ' .
			's.name AS name, ' .
			's.user AS user, ' .
			's.password AS password, ' .
			's.registrar AS registrar, ' .
			's.proxy AS proxy, ' .
			's.send_from_user AS send_from_user, ' .
			's.details AS details, ' .
			'd.name AS dtmfmode ' .
		'FROM ' .
			'sip_trunks AS s, ' .
			'sip_dtmfmodes AS d ' .
		'WHERE ' .
			's.dtmfmode = d.id'
	);

	if ($ba->num_rows($query) > 0) {
		while ($entry = $ba->fetch_array($query)) {

			$regs .= 'register => ' . $entry['user'] . ':' . $entry['password'] . '@' . $entry['registrar'] . "\n";

			$name = str_replace(' ', '_', $entry['name']);
			$host = explode(':', $entry['registrar']);

			$secs .= '['. $name .']' ."\n";
			$secs .= 'context = openpbx_from-trunk' ."\n";
			$secs .= 'type = friend' ."\n";
			$secs .= 'host = '.	$host[0] ."\n";
			$secs .= 'username = '. $entry['user'] ."\n";
			$secs .= 'secret = '. $entry['password'] ."\n";
			$secs .= 'proxy = '. $entry['proxy'] ."\n";
			$secs .= 'dtmfmode = '. $entry['dtmfmode'] ."\n";
			$secs .= (($entry['send_from_user'] == 1) ? 'fromuser = '. $entry['user'] ."\n" : '');
			$secs .= 'disallow = all' ."\n";
			$secs .= 'allow = '. _create_sip_OpenPBX_codecs($ba, $entry['id']) ."\n";
			$secs .= 'setvar = __is_from_trunk=1' ."\n";
			$secs .= 'setvar = trunkname='. $name ."\n";
			$secs .= ((!empty($entry['details'])) ? $entry['details'] . "\n" : '');
			$secs .= "\n";
		}
		unset($entry);

		$cont .= $regs ."\n";
		$cont .= $secs ."\n";
	}
	unset($query);


	$query = $ba->query(
		'SELECT ' .
			'u.name AS name, ' .
			'u.username AS username, ' .
			'u.password AS password, ' .
			'u.voicemail AS voicemail, ' .
			'u.send_from_user AS send_from_user, ' .
			'u.details AS details, ' .
			'e.extension AS extension ' .
		'FROM ' .
			'sip_users AS u, ' .
			'sip_extensions AS e ' .
		'WHERE ' .
			'u.extension = e.id'
	);

	if ($ba->num_rows($query) > 0) {
		while ($entry = $ba->fetch_array($query)) {

			$cont .= '['. ((empty($entry['username'])) ? $entry['extension'] : $entry['username']) .']' ."\n";
			$cont .= 'context = openpbx_to-internal' ."\n";
			$cont .= 'type = friend' ."\n";
			$cont .= 'host = dynamic' ."\n";
			$cont .= 'username = '. (empty($entry['username']) ? $entry['extension'] : $entry['username']) ."\n";
			$cont .= 'secret = '. $entry['password'] ."\n";
			$cont .= 'callerid = "'. $entry['name'] .'" <'. $entry['extension'] .'>' ."\n";
			$cont .= (($entry['send_from_user'] == 1) ? 'fromuser = '. (empty($entry['username']) ? $entry['extension'] : $entry['username']) ."\n" : '');
			$cont .= 'dtmfmode = rfc2833' ."\n";
			$cont .= 'disallow = all' ."\n";
			$cont .= 'allow = alaw' ."\n";
			$cont .= 'nat = no' ."n";
			$cont .= 'canreinvite = no' ."\n";
			$cont .= 'call-limit = 2' ."\n";
			$cont .= 'subscribecontext = openpbx_to-internal' ."\n";
			$cont .= ((!empty($entry['details'])) ? $entry['details'] : '');
			$cont .= "\n";
		}
		unset($entry);
	}
	unset($query);

	_create_dirs();
	_save_conf($fn, $cont);
}

?>
